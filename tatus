warning: in the working copy of 'lib/dlmm.js', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/lib/dlmm.js b/lib/dlmm.js[m
[1mindex a060abe..bff5542 100644[m
[1m--- a/lib/dlmm.js[m
[1m+++ b/lib/dlmm.js[m
[36m@@ -693,29 +693,38 @@[m [masync function recenterPosition(connection, dlmmPool, userKeypair, oldPositionPu[m
         // üîí Add accumulated SOL from wallet based on which token is SOL[m
         const SOL_BUFFER = new BN(process.env.SOL_FEE_BUFFER_LAMPORTS || 70_000_000);[m
         [m
[31m-        if (X_IS_SOL && walletTokens.tokenXMint === dlmmPool.tokenX.publicKey.toBase58()) {[m
[31m-          // SOL is Token X - add from wallet Token X[m
[31m-          const usableWalletSOL = walletTokens.walletTokenX.gt(SOL_BUFFER) [m
[31m-            ? walletTokens.walletTokenX.sub(SOL_BUFFER) [m
[31m-            : new BN(0);[m
[31m-          [m
[31m-          if (usableWalletSOL.gt(new BN(0))) {[m
[31m-            lamX = lamX.add(usableWalletSOL);[m
[31m-            console.log(`   üí° Added ${(usableWalletSOL.toNumber() / 10 ** dx).toFixed(6)} accumulated SOL from wallet (Token X)`);[m
[31m-            console.log(`   üîí Verified SOL mint: ${walletTokens.tokenXMint.slice(0,8)}...`);[m
[31m-          }[m
[31m-        } else if (Y_IS_SOL && walletTokens.tokenYMint === dlmmPool.tokenY.publicKey.toBase58()) {[m
[31m-          // SOL is Token Y - add from wallet Token Y[m
[31m-          const usableWalletSOL = walletTokens.walletTokenY.gt(SOL_BUFFER) [m
[31m-            ? walletTokens.walletTokenY.sub(SOL_BUFFER) [m
[31m-            : new BN(0);[m
[31m-          [m
[31m-          if (usableWalletSOL.gt(new BN(0))) {[m
[31m-            lamY = lamY.add(usableWalletSOL);[m
[31m-            console.log(`   üí° Added ${(usableWalletSOL.toNumber() / 10 ** dy).toFixed(6)} accumulated SOL from wallet (Token Y)`);[m
[31m-            console.log(`   üîí Verified SOL mint: ${walletTokens.tokenYMint.slice(0,8)}...`);[m
[31m-          }[m
[31m-        }[m
[32m+[m[32m                              // üéØ CONSERVATIVE APPROACH: Only use small amounts that could be from LP fees[m
[32m+[m[32m                      // Don't drain the wallet - only compound what's reasonable from LP activities[m
[32m+[m[41m                      [m
[32m+[m[32m                      if (X_IS_SOL && walletTokens.tokenXMint === dlmmPool.tokenX.publicKey.toBase58()) {[m
[32m+[m[32m                        // SOL is Token X - add LIMITED amount from wallet Token X[m
[32m+[m[32m                        const usableWalletSOL = walletTokens.walletTokenX.gt(SOL_BUFFER)[m[41m [m
[32m+[m[32m                          ? walletTokens.walletTokenX.sub(SOL_BUFFER)[m[41m [m
[32m+[m[32m                          : new BN(0);[m
[32m+[m[41m                        [m
[32m+[m[32m                        if (usableWalletSOL.gt(new BN(0))) {[m
[32m+[m[32m                          lamX = lamX.add(usableWalletSOL);[m
[32m+[m[32m                          console.log(`   üí° Added ${(usableWalletSOL.toNumber() / 10 ** dx).toFixed(6)} SAFE-LIMITED SOL from wallet (Token X)`);[m
[32m+[m[32m                          console.log(`   üîí Verified SOL mint: ${walletTokens.tokenXMint.slice(0,8)}...`);[m
[32m+[m[32m                          if (walletTokens.limitApplied) {[m
[32m+[m[32m                            console.log(`   üõ°Ô∏è  Wallet protection: Limited from ${walletTokens.originalTokenXAmount.toFixed(6)} to prevent drainage`);[m
[32m+[m[32m                          }[m
[32m+[m[32m                        }[m
[32m+[m[32m                      } else if (Y_IS_SOL && walletTokens.tokenYMint === dlmmPool.tokenY.publicKey.toBase58()) {[m
[32m+[m[32m                        // SOL is Token Y - add LIMITED amount from wallet Token Y[m
[32m+[m[32m                        const usableWalletSOL = walletTokens.walletTokenY.gt(SOL_BUFFER)[m[41m [m
[32m+[m[32m                          ? walletTokens.walletTokenY.sub(SOL_BUFFER)[m[41m [m
[32m+[m[32m                          : new BN(0);[m
[32m+[m[41m                        [m
[32m+[m[32m                        if (usableWalletSOL.gt(new BN(0))) {[m
[32m+[m[32m                          lamY = lamY.add(usableWalletSOL);[m
[32m+[m[32m                          console.log(`   üí° Added ${(usableWalletSOL.toNumber() / 10 ** dy).toFixed(6)} SAFE-LIMITED SOL from wallet (Token Y)`);[m
[32m+[m[32m                          console.log(`   üîí Verified SOL mint: ${walletTokens.tokenYMint.slice(0,8)}...`);[m
[32m+[m[32m                          if (walletTokens.limitApplied) {[m
[32m+[m[32m                            console.log(`   üõ°Ô∏è  Wallet protection: Limited from ${walletTokens.originalTokenYAmount.toFixed(6)} to prevent drainage`);[m
[32m+[m[32m                          }[m
[32m+[m[32m                        }[m
[32m+[m[32m                      }[m
         [m
         console.log(`   ‚úÖ SOL-only position: Using SOL fees + wallet SOL`);[m
         if (X_IS_SOL) {[m
[36m@@ -732,12 +741,15 @@[m [masync function recenterPosition(connection, dlmmPool, userKeypair, oldPositionPu[m
           lamX = new BN(0); // Don't use SOL fees now[m
           console.log(`   üìç Alt token is Token Y - using for DOWN position`);[m
           [m
[31m-          // Add accumulated alt token from wallet[m
[31m-          if (walletTokens.tokenYMint === dlmmPool.tokenY.publicKey.toBase58() && walletTokens.walletTokenY.gt(new BN(0))) {[m
[31m-            lamY = lamY.add(walletTokens.walletTokenY);[m
[31m-            console.log(`   üí° Added ${walletTokens.tokenYAmount.toFixed(6)} accumulated alt token from wallet (Token Y)`);[m
[31m-            console.log(`   üîí Verified alt token mint: ${walletTokens.tokenYMint.slice(0,8)}...`);[m
[31m-          }[m
[32m+[m[32m                                  // Add accumulated alt token from wallet (SAFE-LIMITED)[m
[32m+[m[32m                        if (walletTokens.tokenYMint === dlmmPool.tokenY.publicKey.toBase58() && walletTokens.walletTokenY.gt(new BN(0))) {[m
[32m+[m[32m                          lamY = lamY.add(walletTokens.walletTokenY);[m
[32m+[m[32m                          console.log(`   üí° Added ${walletTokens.tokenYAmount.toFixed(6)} SAFE-LIMITED alt token from wallet (Token Y)`);[m
[32m+[m[32m                          console.log(`   üîí Verified alt token mint: ${walletTokens.tokenYMint.slice(0,8)}...`);[m
[32m+[m[32m                          if (walletTokens.limitApplied) {[m
[32m+[m[32m                            console.log(`   üõ°Ô∏è  Wallet protection: Limited from ${walletTokens.originalTokenYAmount.toFixed(6)} to prevent drainage`);[m
[32m+[m[32m                          }[m
[32m+[m[32m                        }[m
           [m
         } else if (Y_IS_SOL) {[m
           // SOL is Token Y, so alt token is Token X - use Token X for DOWN position[m
[36m@@ -745,12 +757,15 @@[m [masync function recenterPosition(connection, dlmmPool, userKeypair, oldPositionPu[m
           lamY = new BN(0); // Don't use SOL fees now[m
           console.log(`   üìç Alt token is Token X - using for DOWN position`);[m
           [m
[31m-          // Add accumulated alt token from wallet[m
[31m-          if (walletTokens.tokenXMint === dlmmPool.tokenX.publicKey.toBase58() && walletTokens.walletTokenX.gt(new BN(0))) {[m
[31m-            lamX = lamX.add(walletTokens.walletTokenX);[m
[31m-            console.log(`   üí° Added ${walletTokens.tokenXAmount.toFixed(6)} accumulated alt token from wallet (Token X)`);[m
[31m-            console.log(`   üîí Verified alt token mint: ${walletTokens.tokenXMint.slice(0,8)}...`);[m
[31m-          }[m
[32m+[m[32m                                  // Add accumulated alt token from wallet (SAFE-LIMITED)[m
[32m+[m[32m                        if (walletTokens.tokenXMint === dlmmPool.tokenX.publicKey.toBase58() && walletTokens.walletTokenX.gt(new BN(0))) {[m
[32m+[m[32m                          lamX = lamX.add(walletTokens.walletTokenX);[m
[32m+[m[32m                          console.log(`   üí° Added ${walletTokens.tokenXAmount.toFixed(6)} SAFE-LIMITED alt token from wallet (Token X)`);[m
[32m+[m[32m                          console.log(`   üîí Verified alt token mint: ${walletTokens.tokenXMint.slice(0,8)}...`);[m
[32m+[m[32m                          if (walletTokens.limitApplied) {[m
[32m+[m[32m                            console.log(`   üõ°Ô∏è  Wallet protection: Limited from ${walletTokens.originalTokenXAmount.toFixed(6)} to prevent drainage`);[m
[32m+[m[32m                          }[m
[32m+[m[32m                        }[m
         }[m
         [m
         console.log(`   ‚úÖ Alt token-only position: Using alt token fees + wallet alt tokens`);[m
